/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 1styrGroupB
 */
public class ManageProducts extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form ManageProducts
     */
    public ManageProducts() {
        initComponents();
        showTableData();
        GetCat();
        showDate();
        showTime();
//        changeColorQuantityLow();

        GetDes();
        useremail.setText(String.valueOf(LoginForm.email).toString());
        staff_name.setText(String.valueOf(LoginForm.name).toString()); 
        
    }

        public void showTableData(){
        try{
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
             String sql = "SELECT productid, productname, description, buyingprice, quantity, sellingprice, category,status FROM managingproducts";
             pst = con.prepareStatement(sql);
             rs=pst.executeQuery();
             producttable.setModel(DbUtils.resultSetToTableModel(rs));
             
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
          void showDate(){
        Date dat= new Date();
        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
        jdate.setText(s.format(dat));
        
    }
    void showTime(){
        new Timer(0, new ActionListener() {
            
            

            @Override
            public void actionPerformed(ActionEvent e) {
                Date dat= new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                jtime.setText(s.format(dat));
            }
        }
        ).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        productid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        productname = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        sellingprice = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        producttable = new javax.swing.JTable();
        clear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        inventoryperson = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        staff_name = new javax.swing.JLabel();
        Admin = new javax.swing.JLabel();
        useremail = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        buyingprice = new javax.swing.JTextField();
        description = new javax.swing.JComboBox<>();
        jtime = new javax.swing.JLabel();
        jdate = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        Date_chooser = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        MCategories = new javax.swing.JLabel();
        Cancel1 = new javax.swing.JLabel();
        Cancel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Products");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Product ID");

        productid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Product Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Quantity");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Selling Price");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Category");

        category.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        productname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        sellingprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        add.setBackground(new java.awt.Color(102, 255, 255));
        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\addition.png")); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(102, 255, 255));
        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\save.png")); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(102, 255, 255));
        delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\delete.png")); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        producttable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Description", "BuyingPrice", "Selling Price", "Quantity", "Category", "Status"
            }
        ));
        producttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                producttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(producttable);

        clear.setBackground(new java.awt.Color(102, 255, 255));
        clear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clear.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\clear.png")); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(0, 102, 102));
        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Product List");

        inventoryperson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inventoryperson.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Baoc\\gadgets.png")); // NOI18N
        inventoryperson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventorypersonMouseClicked(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\steward.png")); // NOI18N

        staff_name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        staff_name.setForeground(new java.awt.Color(0, 153, 153));
        staff_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Admin.setBackground(new java.awt.Color(255, 51, 51));
        Admin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Admin.setForeground(new java.awt.Color(0, 153, 153));
        Admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Admin.setText("Staff email:");
        Admin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0)));

        useremail.setBackground(new java.awt.Color(255, 0, 0));
        useremail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        useremail.setForeground(new java.awt.Color(0, 153, 153));
        useremail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        useremail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Description");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 153));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Buying Price");

        buyingprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        description.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionActionPerformed(evt);
            }
        });

        jtime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtime.setForeground(new java.awt.Color(0, 153, 153));
        jtime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtime.setText("Time");

        jdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jdate.setForeground(new java.awt.Color(0, 153, 153));
        jdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jdate.setText("Date");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 153));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Status");

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enable", "disable" }));
        status.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 153, 153));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Date");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\clock.png")); // NOI18N

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\calendar.png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(staff_name, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inventoryperson)
                        .addGap(20, 331, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(218, 294, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(351, 351, 351))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(add)
                                .addGap(18, 18, 18)
                                .addComponent(update)
                                .addGap(18, 18, 18)
                                .addComponent(delete)
                                .addGap(18, 18, 18)
                                .addComponent(clear)
                                .addGap(278, 278, 278))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(productid, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(productname, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(description, 0, 232, Short.MAX_VALUE)
                            .addComponent(buyingprice)
                            .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sellingprice, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(quantity)
                            .addComponent(Date_chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Admin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(useremail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel16)
                                .addGap(35, 35, 35)
                                .addComponent(jtime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(staff_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel1))
                            .addComponent(inventoryperson, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productid, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sellingprice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buyingprice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(update)
                    .addComponent(delete)
                    .addComponent(clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(useremail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Admin, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12))
        );

        MCategories.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        MCategories.setForeground(new java.awt.Color(204, 255, 255));
        MCategories.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MCategories.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\category.png")); // NOI18N
        MCategories.setText("Manage Categories");
        MCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MCategoriesMouseClicked(evt);
            }
        });

        Cancel1.setBackground(new java.awt.Color(0, 102, 102));
        Cancel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Cancel1.setForeground(new java.awt.Color(204, 255, 255));
        Cancel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cancel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\logout.png")); // NOI18N
        Cancel1.setText("Logout");
        Cancel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cancel1MouseClicked(evt);
            }
        });

        Cancel.setBackground(new java.awt.Color(0, 102, 102));
        Cancel.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        Cancel.setForeground(new java.awt.Color(102, 255, 255));
        Cancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cancel.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\close.png")); // NOI18N
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelMouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\rsz_2j&r_appliances.png")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("JAppliances Shop");

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Good Quality Appliances");

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Appliances Makes Everything Better");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel15))
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(MCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)))
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Cancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cancel1)
                            .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(36, 36, 36)
                        .addComponent(MCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1300, 666));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
         String stat = "enable";
        if ( productname.getText().isEmpty() || buyingprice.getText().isEmpty() ||quantity.getText().isEmpty() || sellingprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"All fields must not be empty");
        }else{
            try{ 
            String sql ="INSERT INTO managingproducts( productname, description, buyingprice, quantity, sellingprice, category, status) VALUES (?,?,?,?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(sql);
            pst.setString(1,productname.getText());
            pst.setString(2,description.getSelectedItem().toString());
            pst.setFloat(3, Float.valueOf(buyingprice.getText()));
            pst.setInt(4, Integer.valueOf(quantity.getText()));
            pst.setFloat(5, Float.valueOf(sellingprice.getText()));
            pst.setString(6,category.getSelectedItem().toString());
            pst.setString(7, stat);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"inserted successfully");
            
            
            String uname = staff_name.getText();
            int user_id = LoginForm.userid;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date_choose = sdf.format(Date_chooser.getDate());
            
            
            
            String query ="INSERT INTO stafftransaction(staffname, userid, inventoryid, productname, quantity, typeoftransaction, status, date) VALUES (?,?,?,?,?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(query);
            pst.setString(1, uname);
            pst.setInt(2,user_id);
            pst.setInt(3, Integer.valueOf(productid.getText()));
            pst.setString(4,productname.getText());
            pst.setInt(5, Integer.valueOf(quantity.getText()));
            pst.setString(6,"add");
            pst.setString(7,status.getSelectedItem().toString());
            
            pst.setString(8,date_choose);
            
            
            pst.executeUpdate();
   
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        
        }
       
       
        showTableData();
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        
        if ( productid.getText().isEmpty()||productname.getText().isEmpty() ||buyingprice.getText().isEmpty() || quantity.getText().isEmpty() || sellingprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Select product you want to update from the table");
        }else{
            try{
            String sql ="UPDATE managingproducts SET productname=?,description=?,buyingprice=?,quantity=?,sellingprice=?,category=?,status=? WHERE productid=?";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(sql);
            pst.setInt(8, Integer.valueOf(productid.getText()));
            pst.setString(1,productname.getText());
            pst.setString(2,description.getSelectedItem().toString());
            pst.setFloat(3,Float.valueOf(buyingprice.getText()));
            pst.setInt(4, Integer.valueOf(quantity.getText()));
            pst.setFloat(5, Float.valueOf(sellingprice.getText()));
            pst.setString(6,category.getSelectedItem().toString());
            pst.setString(7,status.getSelectedItem().toString());
            
           
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"updated successfully");
            
            
            String uname = staff_name.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date_choose = sdf.format(Date_chooser.getDate());
            int user_id = LoginForm.userid;
            
            
            String query ="INSERT INTO stafftransaction(staffname, userid, inventoryid, productname, quantity, typeoftransaction, status, date) VALUES (?,?,?,?,?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(query);
            pst.setString(1, uname);
            pst.setInt(2,user_id);
            pst.setInt(3, Integer.valueOf(productid.getText()));
            pst.setString(4,productname.getText());
            pst.setInt(5, Integer.valueOf(quantity.getText()));
            pst.setString(6,"update");
            pst.setString(7,status.getSelectedItem().toString());
            
            pst.setString(8,date_choose);
            
            
            pst.executeUpdate();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
            
        }
        showTableData();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        
        if(!producttable.getSelectionModel().isSelectionEmpty()){
            int a = JOptionPane.showConfirmDialog((Component)null,"Do you want to delete", "DELETE",JOptionPane.YES_NO_OPTION);
        
        if(a==0){
             int row =producttable.getSelectedRow();
            String cell =producttable.getModel().getValueAt(row,0).toString();
            String sql ="DELETE FROM managingproducts WHERE productid= " + cell;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(sql);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"deleted successfully");
            
            
            String uname = staff_name.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date_choose = sdf.format(Date_chooser.getDate());
            int user_id = LoginForm.userid;
            
            
            String query ="INSERT INTO stafftransaction(staffname, userid, inventoryid, productname, quantity, typeoftransaction, status, date) VALUES (?,?,?,?,?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            pst = con.prepareStatement(query);
            pst.setString(1, uname);
            pst.setInt(2,user_id);
            pst.setInt(3, Integer.valueOf(productid.getText()));
            pst.setString(4,productname.getText());
            pst.setInt(5, Integer.valueOf(quantity.getText()));
            pst.setString(6,"delete");
            pst.setString(7,status.getSelectedItem().toString());
            
            pst.setString(8,date_choose);
            
            pst.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }finally{
            try{
                pst.close();
                rs.close();
            }catch(Exception ex){
                
            }
        }    
        }
        }
        showTableData();
    }//GEN-LAST:event_deleteActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        productid.setText(null);
        productname.setText(null);
        quantity.setText(null);
        sellingprice.setText(null);
        buyingprice.setText(null);
        Date_chooser.setDate(null);
    }//GEN-LAST:event_clearActionPerformed

    private void GetCat(){
    try{
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
             String query = "SELECT * FROM managingcategory";
             pst = con.prepareStatement(query);
            
             rs=pst.executeQuery();
             while(rs.next()){
                 String Mycat = rs.getString("categoryname");
                 category.addItem(Mycat);
             }
             
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    private void GetDes(){
    try{
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
             String query = "SELECT * FROM managingcategory";
             pst = con.prepareStatement(query);
            
             rs=pst.executeQuery();
             while(rs.next()){
                 String MyDes = rs.getString("description");
                 description.addItem(MyDes);
             }
             
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
//    public void changeColorQuantityLow(){
//        
//        producttable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
//        @Override
//        public Component getTableCellRendererComponent(JTable table,
//        Object value, boolean isSelected, boolean hasFocus, int row, int col) {
//        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
//        
//        
//        
//        
//        try {
//            
//            String sql ="SELECT * FROM managingproducts";
//            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
//            pst = con.prepareStatement(sql);
//            
//            
//            rs=pst.executeQuery();
//            producttable.setModel(DbUtils.resultSetToTableModel(rs)); 
//            
//            
//            while(rs.next()){ 
//                 if(rs.getString(5).equals("<=10")){
//                     setBackground(Color.RED);
//                     setForeground(Color.WHITE);
//                     
//                 }else{
//                     setBackground(table.getBackground());
//                     setForeground(table.getForeground());
//                 }
//            }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(ManageProducts.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
////        if ("<10".equals(quantity)) {
////            setBackground(Color.RED);
////            setForeground(Color.WHITE);
////        } else {
////            setBackground(table.getBackground());
////            setForeground(table.getForeground());
////        }       
////        return this;
//            return this;
//    }   
//});
//    }
    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    String pstat;
    int quantityval;
    int threshold = 10;
    private void producttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_producttableMouseClicked
        DefaultTableModel model = (DefaultTableModel)producttable.getModel();
        int Myindex = producttable.getSelectedRow();
        productid.setText(model.getValueAt(Myindex, 0).toString());
        productname.setText(model.getValueAt(Myindex, 1).toString());
        description.setSelectedItem(model.getValueAt(Myindex, 2).toString());
        buyingprice.setText(model.getValueAt(Myindex, 3).toString());
        sellingprice.setText(model.getValueAt(Myindex, 5).toString());
        quantity.setText(model.getValueAt(Myindex, 4).toString());
        category.setSelectedItem(model.getValueAt(Myindex, 6).toString());
        status.setSelectedItem(model.getValueAt(Myindex, 7).toString());
        pstat = String.valueOf(model.getValueAt(Myindex, 7));
        quantityval = Integer.valueOf(model.getValueAt(Myindex,4).toString());
                  if (pstat.equals("disable")){
                            add.setEnabled(false);
                            delete.setEnabled(false);
                            clear.setEnabled(false);
                            productid.setEnabled(false);
                            productname.setEnabled(false);
                            description.setEnabled(false);
                            buyingprice.setEnabled(false);
                            sellingprice.setEnabled(false);
                            category.setEnabled(false);
                            update.setEnabled(true);
                            quantity.setEnabled(true);
                            
                   }
                    else if (pstat.equals("enable")){
                            add.setEnabled(true);
                            delete.setEnabled(true);
                            clear.setEnabled(true);
                            productid.setEnabled(true);
                            productname.setEnabled(true);
                            description.setEnabled(true);
                            buyingprice.setEnabled(true);
                            sellingprice.setEnabled(true);
                            category.setEnabled(true);
                            
                    }
    if (quantityval <= threshold){
                  String stat = "disable";
                  JOptionPane.showMessageDialog(null, "Quantity of your product reached the threshold! \n Add Stock Now" , "Add Quantity",JOptionPane.ERROR_MESSAGE);
                  add.setEnabled(false);
                  delete.setEnabled(false);
                  clear.setEnabled(false);
                  productid.setEnabled(false);
                  productname.setEnabled(false);
                  description.setEnabled(false);
                  buyingprice.setEnabled(false);
                  sellingprice.setEnabled(false);
                  category.setEnabled(false);
                  update.setEnabled(true);
                  quantity.setEnabled(true);
                  status.setEnabled(true);
                  
                  status.setSelectedItem(stat);
                  
    }else if (quantityval > threshold && pstat.equals("disable")){
                  add.setEnabled(false);
                  delete.setEnabled(false);
                  clear.setEnabled(false);
                  productid.setEnabled(false);
                  productname.setEnabled(false);
                  description.setEnabled(false);
                  buyingprice.setEnabled(false);
                  sellingprice.setEnabled(false);
                  category.setEnabled(false);
                  update.setEnabled(true);
                  quantity.setEnabled(true);
                  status.setEnabled(true);
                  
                  
    }
        
    }//GEN-LAST:event_producttableMouseClicked

    private void MCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MCategoriesMouseClicked
        new ManageCategories().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MCategoriesMouseClicked

    private void Cancel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel1MouseClicked
        new LoginForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Cancel1MouseClicked

    private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CancelMouseClicked

    private void inventorypersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventorypersonMouseClicked

    }//GEN-LAST:event_inventorypersonMouseClicked

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Admin;
    private javax.swing.JLabel Cancel;
    private javax.swing.JLabel Cancel1;
    private com.toedter.calendar.JDateChooser Date_chooser;
    private javax.swing.JLabel MCategories;
    private javax.swing.JButton add;
    private javax.swing.JTextField buyingprice;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> description;
    private javax.swing.JLabel inventoryperson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jdate;
    private javax.swing.JLabel jtime;
    private javax.swing.JTextField productid;
    private javax.swing.JTextField productname;
    private javax.swing.JTable producttable;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField sellingprice;
    private javax.swing.JLabel staff_name;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JButton update;
    private javax.swing.JLabel useremail;
    // End of variables declaration//GEN-END:variables
}
