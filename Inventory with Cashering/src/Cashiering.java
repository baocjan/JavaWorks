
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 1styrGroupB
 */
public class Cashiering extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement pst = null;
     PreparedStatement pst1 = null;
    ResultSet rs = null;
    DefaultTableModel df;
    /** Creates new form Cashiering */
    public Cashiering() {
        initComponents();
        showTableData();
        GetCat();
        showDate();
        showTime();
        useremail.setText(String.valueOf(LoginForm.email).toString());
        cashier_name.setText(String.valueOf(LoginForm.name).toString()); 
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cashier1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        filter = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        producttable = new javax.swing.JTable();
        prodprice = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        prodname = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        prodid = new javax.swing.JTextField();
        txtcost = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtpay = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtchange = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displaytable = new javax.swing.JTable();
        printinvoice = new javax.swing.JButton();
        cashier_name = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Admin = new javax.swing.JLabel();
        useremail = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        Date_chooser = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtbill = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        Cancel = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        cashier1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cashier1.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\bill.png")); // NOI18N
        cashier1.setMaximumSize(new java.awt.Dimension(38, 18));
        cashier1.setMinimumSize(new java.awt.Dimension(38, 18));
        cashier1.setPreferredSize(new java.awt.Dimension(38, 18));
        cashier1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashier1MouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Billing Point");

        jLabel16.setBackground(new java.awt.Color(0, 102, 102));
        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 153));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Product List");

        category.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryMouseClicked(evt);
            }
        });
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        filter.setBackground(new java.awt.Color(102, 255, 255));
        filter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        filter.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\filtering.png")); // NOI18N
        filter.setText("Filter");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        refresh.setBackground(new java.awt.Color(102, 255, 255));
        refresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refresh.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\refresh.png")); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        producttable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Quantity", "Price", "Status"
            }
        ));
        producttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                producttableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(producttable);

        prodprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 153));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Price");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 153));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Quantity");

        quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        prodname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 153));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(" Name");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 153));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Product ID");

        prodid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        txtcost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 153, 153));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Total Cost");

        txtpay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 153, 153));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Payment");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 153, 153));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Change");

        txtchange.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        txtchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchangeActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(102, 255, 255));
        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\addition.png")); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(102, 255, 255));
        clear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clear.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\clear.png")); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        displaytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product name", "Price", "Quantity", "Total", "Date"
            }
        ));
        jScrollPane1.setViewportView(displaytable);

        printinvoice.setBackground(new java.awt.Color(102, 255, 255));
        printinvoice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        printinvoice.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\place order.png")); // NOI18N
        printinvoice.setText("PRINT INVOICE");
        printinvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printinvoiceActionPerformed(evt);
            }
        });

        cashier_name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cashier_name.setForeground(new java.awt.Color(0, 153, 153));
        cashier_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\cashier.png")); // NOI18N

        Admin.setBackground(new java.awt.Color(255, 51, 51));
        Admin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Admin.setForeground(new java.awt.Color(0, 153, 153));
        Admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Admin.setText("Staff email:");
        Admin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0)));

        useremail.setBackground(new java.awt.Color(255, 0, 0));
        useremail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        useremail.setForeground(new java.awt.Color(0, 153, 153));
        useremail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        useremail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0)));

        time.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        time.setForeground(new java.awt.Color(0, 153, 153));
        time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time.setText("Time");

        date.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        date.setForeground(new java.awt.Color(0, 153, 153));
        date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        date.setText("Date");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 153, 153));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Date");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\calendar.png")); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\clock.png")); // NOI18N

        txtbill.setColumns(20);
        txtbill.setRows(5);
        jScrollPane2.setViewportView(txtbill);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(add)
                                .addGap(18, 18, 18)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(prodname, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cashier_name, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(prodid, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prodprice, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(filter)
                                    .addGap(28, 28, 28)
                                    .addComponent(refresh))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtcost, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(20, 20, 20)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtchange, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtpay, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cashier1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Admin)
                                .addGap(18, 18, 18)
                                .addComponent(useremail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(printinvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cashier1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cashier_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(category, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodid, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(prodprice, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clear)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcost, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(txtpay, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtchange, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(useremail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Admin, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printinvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("JAppliances Shop");

        Cancel.setBackground(new java.awt.Color(0, 102, 102));
        Cancel.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        Cancel.setForeground(new java.awt.Color(102, 255, 255));
        Cancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cancel.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\close.png")); // NOI18N
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelMouseClicked(evt);
            }
        });

        logout.setBackground(new java.awt.Color(0, 102, 102));
        logout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(204, 255, 255));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setIcon(new javax.swing.ImageIcon("C:\\Users\\1styrGroupB\\Desktop\\Javajan\\logout.png")); // NOI18N
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(292, 292, 292)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(logout)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1080, 646));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        new LoginForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CancelMouseClicked

    private void printinvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printinvoiceActionPerformed

        if(txtpay.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Missing Payment");
        }else{
            float totalcost = Float.parseFloat(txtcost.getText());
            float pay = Float.parseFloat(txtpay.getText());
            float tot = pay - totalcost;

            if(pay < totalcost){
                JOptionPane.showMessageDialog(null,"Amount of money is not enough");
            }else{

                txtchange.setText(String.valueOf(tot));
                sales();
                DefaultTableModel model = (DefaultTableModel) displaytable.getModel();
                bill();
                model.setRowCount(0);

                try{

                    displaytable.print();

                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null,ex);
                }
            }

        }

    }//GEN-LAST:event_printinvoiceActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        prodid.setText(null);
        prodname.setText(null);
        quantity.setText(null);
        prodprice.setText(null);
        Date_chooser.setDate(null);
    }//GEN-LAST:event_clearActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        float price,qty,total;
        String jdate;

        if(prodid.getText().isEmpty()||prodname.getText().isEmpty()||quantity.getText().isEmpty() || prodprice.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Missing Information", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(AvailQty > Integer.valueOf(quantity.getText())){
            price = Float.parseFloat(prodprice.getText());
            qty = Float.parseFloat(quantity.getText());
            total = price*qty;
            jdate = String.valueOf(Date_chooser.getDate());

            df = (DefaultTableModel)displaytable.getModel();
            df.addRow (new Object[]
                {

                    prodname.getText(),
                    prodprice.getText(),
                    quantity.getText(),
                    total,
                    Date_chooser.getDate()

                });
                update();
                float sum = 0;
                for(int i = 0; i<displaytable.getRowCount();i++)
                {
                    sum = sum + Float.parseFloat(displaytable.getValueAt(i,3).toString());
                }
                txtcost.setText(String.valueOf(sum));
                prodid.requestFocus();

                String uname = cashier_name.getText();
                int user_id = LoginForm.userid;
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date_choose = sdf.format(Date_chooser.getDate());

                try {
                    String query ="INSERT INTO cashiertransaction(inventoryid, productsold, quantity, sellingprice, totalprice, cashiername, userid, date) VALUES (?,?,?,?,?,?,?,?)";
                    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
                    pst = con.prepareStatement(query);
                    pst.setInt(1, Integer.valueOf(prodid.getText()));
                    pst.setString(2, String.valueOf(prodname.getText()));
                    pst.setInt(3, Integer.valueOf(quantity.getText()));
                    pst.setFloat(4, Float.valueOf(prodprice.getText()));
                    pst.setFloat(5, Float.valueOf(txtcost.getText()));
                    pst.setString(6,uname);
                    pst.setInt(7,user_id);
                    pst.setString(8, date_choose);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Cashiering.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            else{
                JOptionPane.showMessageDialog(this,"Not Enough Stock");

            }
            //
            //        else{
                //                        price = Float.parseFloat(prodprice.getText());
                //                        qty = Float.parseFloat(quantity.getText());
                //                        total = price*qty;
                //                        jdate = String.valueOf(Date_chooser.getDate());
                //
                //                        df = (DefaultTableModel)displaytable.getModel();
                //                        df.addRow (new Object[]
                    //                            {
                        //
                        //                                prodname.getText(),
                        //                                prodprice.getText(),
                        //                                quantity.getText(),
                        //                                total,
                        //                                Date_chooser.getDate()
                        //
                        //                            });
                //                            update();
                //                        }
            //                        float sum = 0;
            //                        for(int i = 0; i<displaytable.getRowCount();i++)
            //                        {
                //                            sum = sum + Float.parseFloat(displaytable.getValueAt(i,3).toString());
                //                        }
            //                        txtcost.setText(String.valueOf(sum));
            //                        prodid.requestFocus();
            //
            //                        String uname = cashier_name.getText();
            //                        int user_id = LoginForm.userid;
            //                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            //                        String date_choose = sdf.format(Date_chooser.getDate());
            //
            //                        try {
                //                            String query ="INSERT INTO cashiertransaction(inventoryid, productsold, quantity, sellingprice, totalprice, cashiername, userid, date) VALUES (?,?,?,?,?,?,?,?)";
                //                            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
                //                            pst = con.prepareStatement(query);
                //                            pst.setInt(1, Integer.valueOf(prodid.getText()));
                //                            pst.setString(2, String.valueOf(prodname.getText()));
                //                            pst.setInt(3, Integer.valueOf(quantity.getText()));
                //                            pst.setFloat(4, Float.valueOf(prodprice.getText()));
                //                            pst.setFloat(5, Float.valueOf(txtcost.getText()));
                //                            pst.setString(6,uname);
                //                            pst.setInt(7,user_id);
                //                            pst.setString(8, date_choose);
                //                            pst.executeUpdate();
                //                        } catch (SQLException ex) {
                //                            Logger.getLogger(Cashiering.class.getName()).log(Level.SEVERE, null, ex);
                //                        }

    }//GEN-LAST:event_addActionPerformed

    private void txtchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtchangeActionPerformed

    private void producttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_producttableMouseClicked
        DefaultTableModel model = (DefaultTableModel)producttable.getModel();
        int Myindex = producttable.getSelectedRow();
        prodid.setText(model.getValueAt(Myindex, 0).toString());
        Prid = Integer.valueOf(model.getValueAt(Myindex, 0).toString());
        AvailQty = Integer.valueOf(model.getValueAt(Myindex, 2).toString());
        quantityval = Integer.valueOf(model.getValueAt(Myindex,2).toString());
        prodname.setText(model.getValueAt(Myindex, 1).toString());
        prodprice.setText(model.getValueAt(Myindex, 3).toString());
        pstat = String.valueOf(model.getValueAt(Myindex, 4));
        if (pstat.equals("disable")){
            JOptionPane.showMessageDialog(null, "Disabled products cannot be sold!",
                "Enable product first!", JOptionPane.ERROR_MESSAGE);
            prodid.setEnabled(false);
            prodname.setEnabled(false);
            quantity.setEnabled(false);
            prodprice.setEnabled(false);
            Date_chooser.setEnabled(false);
            add.setEnabled(false);
            clear.setEnabled(false);
            txtcost.setEnabled(false);
            txtpay.setEnabled(false);
            txtchange.setEnabled(false);

        }
        else if (pstat.equals("enable")){
            prodid.setEnabled(true);
            prodname.setEnabled(true);
            quantity.setEnabled(true);
            prodprice.setEnabled(true);
            Date_chooser.setEnabled(true);
            add.setEnabled(true);
            clear.setEnabled(true);
            txtcost.setEnabled(true);
            txtpay.setEnabled(true);
            txtchange.setEnabled(true);
        }
        if (quantityval <= threshold){

            JOptionPane.showMessageDialog(null, "This product has low stock! \n You cannot sell this product" , "Add Quantity",JOptionPane.ERROR_MESSAGE);
            add.setEnabled(false);
            prodid.setEnabled(false);
            prodname.setEnabled(false);
            quantity.setEnabled(false);
            prodprice.setEnabled(false);
            Date_chooser.setEnabled(false);
            add.setEnabled(false);
            clear.setEnabled(false);
            txtcost.setEnabled(false);
            txtpay.setEnabled(false);
            txtchange.setEnabled(false);

        }
    }//GEN-LAST:event_producttableMouseClicked

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        showTableData();
    }//GEN-LAST:event_refreshActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            String sql ="SELECT productid, productname, quantity, sellingprice, status FROM managingproducts WHERE category='"+category.getSelectedItem().toString()+"'";
            //           pst.setString(1,category.getSelectedItem().toString()+"");
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            producttable.setModel(DbUtils.resultSetToTableModel(rs));

        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_filterActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryMouseClicked

    private void cashier1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashier1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cashier1MouseClicked
    int AvailQty;
    String pstat;
    int quantityval;
    int threshold = 10;        
    public void showTableData(){
        try{
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
             String sql = "SELECT productid, productname, quantity, sellingprice, status FROM managingproducts";
             pst = con.prepareStatement(sql);
             rs=pst.executeQuery();
             producttable.setModel(DbUtils.resultSetToTableModel(rs));
             
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
            private void GetCat(){
    try{
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
             String query = "SELECT * FROM managingcategory";
             pst = con.prepareStatement(query);

             rs=pst.executeQuery(query);
             while(rs.next()){
                 String Mycat = rs.getString("categoryname");
                 category.addItem(Mycat);
             }
             
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    public void bill()
    {
         String total = txtcost.getText();
         String pay = txtpay.getText();
         String bal = txtchange.getText();
         
          DefaultTableModel model = new DefaultTableModel();
        
          model = (DefaultTableModel)displaytable.getModel();
         
         txtbill.setText(txtbill.getText() + "************************************************************************************************\n");
         txtbill.setText(txtbill.getText() + "                                     J&R APPLIANCES                                              \n");
         txtbill.setText(txtbill.getText() + "**************************************************************************************************\n");
         
         //Heading
          txtbill.setText(txtbill.getText() + "Product Name" + "\t\t\t" + "Price" + "\t\t" + "Quantity" + "\t\t" + "Total Amount" + "\n"  );
          
          
          for(int i = 0; i < model.getRowCount(); i++)
          {
              
              String pname = (String)model.getValueAt(i, 0);
              String price = (String)model.getValueAt(i, 1);
              String quantity1 = (String)model.getValueAt(i, 2);
              float totamount = (Float)model.getValueAt(i, 3); 
              
           txtbill.setText(txtbill.getText() + pname  + "\t\t\t" + price+ "\t\t" + quantity1  + "\t\t" + totamount  + "\n"  );
    
          }
          
          txtbill.setText(txtbill.getText() + "\n\n\n");     
          
          txtbill.setText(txtbill.getText() + "\t\t" + "\t\t" + "Subtotal :" + total + "\n");
          txtbill.setText(txtbill.getText() + "\t\t" + "\t\t" + "Pay :" + pay + "\n");
          txtbill.setText(txtbill.getText() + "\t\t" + "\t\t" + "Balance :" + bal + "\n");
          txtbill.setText(txtbill.getText() + "\n");
          txtbill.setText(txtbill.getText() + "******************************************************************************************************\n");
          txtbill.setText(txtbill.getText() + "                                    THANK YOU COME AGAIN                                               \n");

        
    }
    int Prid,newQty;
    public void update(){
        newQty = AvailQty - Integer.valueOf(quantity.getText());
        
        try{
            String query ="UPDATE managingproducts SET quantity="+newQty+""+" WHERE productid="+ Prid;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorywithcashiering","root","");
            Statement Add = con.createStatement();
//            pst = con.prepareStatement(query);
           
            Add.executeUpdate(query);
            
            
            //JOptionPane.showMessageDialog(null,"updated successfully");
            showTableData();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
    }
          void showDate(){
        Date dat= new Date();
        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
        date.setText(s.format(dat));
        
    }
    void showTime(){
        new Timer(0, new ActionListener() {
            
            

            @Override
            public void actionPerformed(ActionEvent e) {
                Date dat= new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                time.setText(s.format(dat));
            }
        }
        ).start();
    }
    @SuppressWarnings("empty-statement")
    
    public void sales(){
        String totalcost = txtcost.getText();
        String pay = txtpay.getText();
        String change = txtchange.getText();
        
        int lastid = 0;
         
        
        try {
            String query ="insert into sales(subtotal,payment,balance) values (?,?,?)";
            pst = con.prepareStatement(query,Statement.RETURN_GENERATED_KEYS);
            pst.setString(1,totalcost);
            pst.setString(2,pay);
            pst.setString(3,change);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            
            if(rs.next())
            {
                lastid = rs.getInt(1);
            }
            
            float rows = displaytable.getRowCount();
            
            String query1 ="insert into sales_product (sales_id, productname, price, quantity, total, date, cashiername) values (?,?,?,?,?,?,?)";
            pst1 = con.prepareStatement(query1,Statement.RETURN_GENERATED_KEYS);
            
            String prodname = "";
            String price;
            String qty;
            Date dt;
            String uname = cashier_name.getText();
            float total=0;
            
            
            for(int i =0; i < displaytable.getRowCount(); i++)
                
            {
                prodname = (String)displaytable.getValueAt(i, 0);
                price = (String)displaytable.getValueAt(i, 1);
                qty = (String)displaytable.getValueAt(i, 2);
                total = (float)displaytable.getValueAt(i, 3);
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date_choose = sdf.format(Date_chooser.getDate());
                dt = (Date)displaytable.getValueAt(i, 4);
                
                        
                pst1.setInt(1,lastid);
                pst1.setString(2,prodname);
                pst1.setString(3,price);
                pst1.setString(4,qty);
                pst1.setFloat(5,total);
                pst1.setString(6,date_choose);
                pst1.setString(7,uname);
                
                pst1.executeUpdate();
            }
            JOptionPane.showMessageDialog(this,"Sales Completed");
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Cashiering.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashiering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashiering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashiering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashiering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cashiering().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Admin;
    private javax.swing.JLabel Cancel;
    private com.toedter.calendar.JDateChooser Date_chooser;
    private javax.swing.JButton add;
    private javax.swing.JLabel cashier1;
    private javax.swing.JLabel cashier_name;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton clear;
    private javax.swing.JLabel date;
    private javax.swing.JTable displaytable;
    private javax.swing.JButton filter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel logout;
    private javax.swing.JButton printinvoice;
    private javax.swing.JTextField prodid;
    private javax.swing.JTextField prodname;
    private javax.swing.JTextField prodprice;
    private javax.swing.JTable producttable;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel time;
    private javax.swing.JTextArea txtbill;
    private javax.swing.JTextField txtchange;
    private javax.swing.JTextField txtcost;
    private javax.swing.JTextField txtpay;
    private javax.swing.JLabel useremail;
    // End of variables declaration//GEN-END:variables

}
